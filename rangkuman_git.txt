Command :
git init
git config --global user.name "namamu"
git config --global user.email "emailmu"
git config --lokal user.name "namamu"
git config --lokal user.email "emailmu"
git config user.name "namamu"
git config user.email "emailmu"
git config --list               : cek perubahan/update list config
cat .git/config                 : konfirmasi ketika email dan/atau nama dirubah
git status
git add "nama_file"             : (nambah file ke antrian commit satu-satu)   
git add .                       : (nambah file semua ke antrian commit)
git commit -m "pesannya :D"
git checkout <5_kode_hash_pertama> -- <nama_file>     : mengen
git update                      : mengupdate git ke versi terbaru

case:
jika cman ngetik git commit, maka masuk vim, cara exit :
:q!

--                              : dibuat untuk hal spesifikgit checkout (5_nomor_hash_awal) -- (nama_file)     : mengembalikan file yang dihapus
git commit -a -m "pesan_mu"
git commit -am "pesan_mu"

git branch <nama_branch>        : membuat branch baru
git branch                      : mengecek branch
git log --all --decorate --oneline --graph  : menampilkan graph history

case (membuat alias/shortcut):
misal meringkas git log --all --decorate --oneline --graph,
alias graph="git log --all --decorate --oneline --graph"
git checkout <nama_branch>          : pindah branch
git merge <branch_sasaran>          : merge suatu branch di branch saat ini
git branch --merge                  : mengecek nama branch yang sudah di merge
git branch -d <branch_yg_akan_dihapus>   : menghapus branch setelah merge
git branch -D <branch_yg_akan_dihapus>   : menghapus branch tanpa mempedulikan merge

case:
merge three-way kemudian muncul vim, ketik ini supaya exit dengan menyimpan nilai default :
:qw!

git merge staff                     :cek strategi merge


# GIT REMOTE
git remote                  : mengecek nama remote (default origin)
git remote -v               : mengecek alamat dari git
git push                    : memasukkan data dari local ke internet

# GIT REMOTE FROM ZERO
buat repo baru di github yang bener-bener kosongan, lalu tambahkan
git remote add <nama_remote_yang_diinginkan> <alamat_repo.git>
git branch -M main              : kayaknya cman merubah nama branch ini
git push -u main origin         : mengepush ke main dari origin
note:: -u adalah upstream yang artinya push ke remote origin dan branch main supaya nanti cuman ketik 'git push' aja buat ngepush 

case:
ketika dua orang remote di file yang sama
1. git fetch                : mengecek repo di github udah sampai mana
                            : ketika terjadi konflik saat push karena double upload dari user lain
                            : buat membuat cabang baru yang nantinya di merge buat resolve merge conflict
2. git pull                 : mengambil dan merge file
